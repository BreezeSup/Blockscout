name: Create 20 Custom Issues

on:
  workflow_dispatch:

permissions:
  issues: write

jobs:
  post_issues:
    runs-on: ubuntu-latest

    steps:
      - name: Post 20 Customized Issues with Metadata
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const issues = [
              {
                title: "üêõ Bug: Gas tracker page shows chart even if disabled",
                body: "The Gas price history chart should not be visible if it is not enabled in the settings.",
                labels: ["bug", "frontend"]
              },
              {
                title: "‚ú® UX: Click area ‚Äì entire line",
                body: "Enhance user interaction by making the entire line clickable, improving usability.",
                labels: ["enhancement", "frontend"]
              },
              {
                title: "üíÖ UI: General design improvements",
                body: "Perform a series of small UX/UI enhancements across the Blockscout frontend.",
                labels: ["enhancement", "design"]
              },
              {
                title: "üõ† Fix: Homepage alert padding",
                body: "Adjust the spacing and padding between information alerts on the homepage.",
                labels: ["bug", "frontend"]
              },
              {
                title: "‚öôÔ∏è Feature: Add Events section",
                body: "Implement an 'Events' section to display event logs and related data.",
                labels: ["feature", "frontend"]
              },
              {
                title: "üîê Add EIP7702 authorization status",
                body: "Show the EIP7702 authorization state for smart contract calls in the transaction view.",
                labels: ["feature", "frontend"]
              },
              {
                title: "üì¶ Review multisender widget",
                body: "Ensure the multisender component works properly and aligns with UI standards.",
                labels: ["task", "frontend"]
              },
              {
                title: "üîí Console message warning for script execution",
                body: "Add a console message to warn users about executing scripts from the developer tools.",
                labels: ["security", "frontend"]
              },
              {
                title: "üåê Celo L2 Epochs support",
                body: "Enable the display and handling of epoch data on Celo Layer 2 networks.",
                labels: ["feature", "L2"]
              },
              {
                title: "üöß Interop mode MVP for product",
                body: "Build a minimum viable product version of interoperability mode across chains.",
                labels: ["feature", "interop"]
              },
              {
                title: "üß© Support multiple interop messages",
                body: "Update the transaction page to allow displaying more than one interoperability message.",
                labels: ["feature", "interop"]
              },
              {
                title: "üìù Improve validation on Public Tag comment field",
                body: "Enhance the validation logic for the comment field in the tag submission form.",
                labels: ["bug", "form"]
              },
              {
                title: "‚ùó Bug: Verified contracts marked as Partial Match",
                body: "Contracts verified with the correct source and constructor are still flagged as partial matches.",
                labels: ["bug", "verification"]
              },
              {
                title: "üåç Feature: Base URL support for cluster chains",
                body: "Add configuration for setting a base URL per chain in cluster mode.",
                labels: ["feature", "multichain"]
              },
              {
                title: "üîÅ ENS reverse resolving across chains",
                body: "Implement reverse ENS name resolving functionality for multichain environments.",
                labels: ["enhancement", "ENS"]
              },
              {
                title: "üîç Upgrade multichain search",
                body: "Improve search capabilities to handle and prioritize multichain results more efficiently.",
                labels: ["enhancement", "search"]
              },
              {
                title: "üé® Backend: Extend schema for NFTs",
                body: "Update database schema to fully support NFT-related data.",
                labels: ["enhancement", "NFT"]
              },
              {
                title: "üìâ Track removed environment variables",
                body: "Improve env-collector to detect and log removed environment variables for debugging.",
                labels: ["feature", "infra"]
              },
              {
                title: "‚ôªÔ∏è Retry import for missed multichain data",
                body: "Add retry mechanisms for missed interop import jobs for multichain data syncing.",
                labels: ["bug", "sync"]
              },
              {
                title: "üìà Add cluster stats to interop explorer homepage",
                body: "Display live statistics for each cluster chain on the interoperability explorer homepage.",
                labels: ["feature", "interop"]
              }
            ];

            const milestoneTitle = "v1.0";
            const assignees = ["VortexDev5"]; // üîÅ Change this to your GitHub username

            const { data: milestones } = await github.rest.issues.listMilestones({
              owner: context.repo.owner,
              repo: context.repo.repo
            });

            const milestone = milestones.find(m => m.title === milestoneTitle);
            if (!milestone) {
              throw new Error(`‚ùå Milestone '${milestoneTitle}' not found.`);
            }

            for (const issue of issues) {
              const response = await github.rest.issues.create({
                owner: context.repo.owner,
                repo: context.repo.repo,
                title: issue.title,
                body: issue.body,
                labels: issue.labels,
                assignees,
                milestone: milestone.number
              });

              console.log(`‚úÖ Created: ${response.data.title} ‚Äî ${response.data.html_url}`);
            }
